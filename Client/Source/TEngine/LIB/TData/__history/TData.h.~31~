//-----------------------------------------------------------//
//-------------------------- TData --------------------------//
//---------------------------(H)-----------------------------//

#ifndef TDataH
#define TDataH

//-- подключение MAPs ID --//
#include "MapsID.h"

//-- подключение типов сортировки --//
#include "SortTypes.h"

//-- подключение MAP --//
#include <map>

//-- подключение Vector --//
#include <vector>

//-- подключение интеллектуальных указателей --//
#include <memory>


namespace TDataNS
{

	class TData
	{

	private:

		//-- создание хранилища данных --//
		std::shared_ptr< SData > data;

        //-- листинг строк --//
		std::vector< UnicodeString > string_list;

		//-- функция сортировки вектора строк --//
		void SortStrings(std::vector< UnicodeString > *S);

		//-- вектор индексов отсортированых источников --//
		std::vector< int > sorted_sources;

		//-- вектор индексов отсортированых валют --//
		std::vector< int > sorted_currencys;

		//-- вектор индексов отсортированых линий --//
		std::vector< int > sorted_lines;

		//-- вектор индексов коррекций --//
		std::vector< int > sorted_corrections;

		//-- вектор индексов арбитражей --//
		std::vector< int > sorted_arbitrations;

	public:

		//-- стандартный конструктор --//
		TData();

		//-- стандартный деструктор --//
		~TData();

		//-- функция возврата хранилища данных --//
		SData* Data();

		//-- функция сортировки источников --//
		void SortSources(const unsigned int Type = eID);

		//-- функция возврата векторов индексов отсортированых источников --//
		std::vector< int > GetSortedSources() const;

		//-- функция возврата векторов индексов отсортированых валют --//
		std::vector< int > GetSortedСurrencys() const;

		//-- функция возврата векторов индексов отсортированых линий --//
		std::vector< int > GetSortedLines() const;

		//-- функция возврата векторов индексов отсортированых коррекций --//
		std::vector< int > GetSortedCorrections() const;

		//-- функция возврата векторов индексов отсортированых арбитражей --//
		std::vector< int > GetSortedArbitrations() const;

	};

};

#endif
